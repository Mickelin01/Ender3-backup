[server]
host = 0.0.0.0
port = 7125
max_upload_size = 1024
klippy_uds_address = ~/printer_data/comms/klippy.sock

[file_manager]
enable_object_processing = True

[authorization]
cors_domains = 
	https://my.mainsail.xyz
	http://my.mainsail.xyz
	http://*.local
	http://*.lan
trusted_clients = 
	10.0.0.0/8
	127.0.0.0/8
	169.254.0.0/16
	172.16.0.0/12
	192.168.0.0/16
	FE80::/10
	::1/128

[octoprint_compat]

[history]

[announcements]
subscriptions = 
	mainsail

[update_manager]
refresh_interval = 168
enable_auto_refresh = True

[update_manager mainsail]
type = web
channel = stable
repo = mainsail-crew/mainsail
path = ~/mainsail

[update_manager mainsail-config]
type = git_repo
primary_branch = master
path = ~/mainsail-config
origin = https://github.com/mainsail-crew/mainsail-config.git
managed_services = klipper

[update_manager Klipper-Adaptive-Meshing-Purging]
type = git_repo
channel = dev
path = ~/Klipper-Adaptive-Meshing-Purging
origin = https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging.git
managed_services = klipper
primary_branch = main

[update_manager crowsnest]
type = git_repo
path = ~/crowsnest
origin = https://github.com/mainsail-crew/crowsnest.git
managed_services = crowsnest
install_script = tools/pkglist.sh

[update_manager sonar]
type = git_repo
path = ~/sonar
origin = https://github.com/mainsail-crew/sonar.git
primary_branch = main
managed_services = sonar
install_script = tools/install.sh

[power ender_power]
type = tasmota
off_when_shutdown = True
address = 192.168.2.123
bound_service = klipper
restart_klipper_when_powered = True

[power ender_pi]
type = mqtt
command_topic = cmnd/3DEnclosure/POWER1
command_payload = 
	{command}
query_topic = cmnd/3DEnclosure/POWER
state_topic = stat/3DEnclosure/POWER
state_response_template = 
	{payload}
query_after_command = False
initial_state = on
off_when_shutdown = False
on_when_job_queued = True
locked_while_printing = True
bound_service = klipper
restart_klipper_when_powered = False

[power ender_lights]
type = mqtt
command_topic = cmnd/3DEnclosure/POWER2
command_payload = 
	{command}
query_topic = cmnd/3DEnclosure/POWER
state_topic = stat/3DEnclosure/POWER
state_response_template = 
	{payload}
query_after_command = False
initial_state = off
off_when_shutdown = False
on_when_job_queued = True
locked_while_printing = False
bound_service = klipper
restart_klipper_when_powered = False

[power ender_usb]
type = mqtt
command_topic = cmnd/3DEnclosure/POWER3
command_payload = 
	{command}
query_topic = cmnd/3DEnclosure/POWER
state_topic = stat/3DEnclosure/POWER
state_response_template = 
	{payload}
query_after_command = False
off_when_shutdown = False
on_when_job_queued = True
locked_while_printing = True
bound_service = klipper
restart_klipper_when_powered = False

[power ender_heater]
type = mqtt
command_topic = cmnd/3DEnclosure/POWER4
command_payload = 
	{command}
query_topic = cmnd/3DEnclosure/POWER
state_topic = stat/3DEnclosure/POWER
state_response_template = 
	{payload}
query_after_command = False
off_when_shutdown = False
on_when_job_queued = False
locked_while_printing = True
bound_service = klipper
restart_klipper_when_powered = False

[power drybox1]
type = tasmota
off_when_shutdown = False
address = 192.168.2.124
restart_klipper_when_powered = False

[power drybox2]
type = tasmota
off_when_shutdown = False
address = 192.168.2.125
restart_klipper_when_powered = False

[mqtt]
address = 192.168.2.96
port = 1883
mqtt_protocol = v3.1.1
enable_moonraker_api = True
instance_name = voron

[update_manager mobileraker]
type = git_repo
path = /home/pi/mobileraker_companion
origin = https://github.com/Clon1998/mobileraker_companion.git
primary_branch = main
managed_services = mobileraker
env = /home/pi/mobileraker-env/bin/python
requirements = scripts/mobileraker-requirements.txt
install_script = scripts/install-mobileraker-companion.sh

