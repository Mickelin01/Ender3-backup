[server]
host: 0.0.0.0
port: 7125
# The maximum size allowed for a file upload (in MiB).  Default 1024 MiB
max_upload_size: 1024
# Path to klippy Unix Domain Socket
klippy_uds_address: ~/printer_data/comms/klippy.sock

[file_manager]
# post processing for object cancel. Not recommended for low resource SBCs such as a Pi Zero. Default False
enable_object_processing: True

[authorization]
cors_domains:
    https://my.mainsail.xyz
    http://my.mainsail.xyz
    http://*.local
    http://*.lan
trusted_clients:
    10.0.0.0/8
    127.0.0.0/8
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    FE80::/10
    ::1/128

# enables partial support of Octoprint API
[octoprint_compat]

# enables moonraker to track and store print history.
[history]

# this enables moonraker announcements for mainsail
[announcements]
subscriptions:
    mainsail

# this enables moonraker's update manager
[update_manager]
refresh_interval: 168
enable_auto_refresh: True

[update_manager mainsail]
type: web
channel: stable
repo: mainsail-crew/mainsail
path: ~/mainsail

[update_manager mainsail-config]
type: git_repo
primary_branch: master
path: ~/mainsail-config
origin: https://github.com/mainsail-crew/mainsail-config.git
managed_services: klipper

[update_manager Klipper-Adaptive-Meshing-Purging]
type: git_repo
channel: dev
path: ~/Klipper-Adaptive-Meshing-Purging
origin: https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging.git
managed_services: klipper
primary_branch: main

### moonraker-timelapse
### Don't forget to include timelapse.cfg to your printer.cfg
### Uncomment to enable moonraker-timelapse


#[update_manager timelapse]
#type: git_repo
#primary_branch: main
#path: ~/moonraker-timelapse
#origin: https://github.com/mainsail-crew/moonraker-timelapse.git
#managed_services: klipper moonraker

#[timelapse]
###   Directory where the generated video will be saved
#output_path: ~/timelapse/
###   Directory where ffmpeg is installed
#ffmpeg_binary_path: /usr/bin/ffmpeg

# Crowsnest update_manager entry
[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
managed_services: crowsnest
install_script: tools/pkglist.sh

# Sonar update_manager entry
[update_manager sonar]
type: git_repo
path: ~/sonar
origin: https://github.com/mainsail-crew/sonar.git
primary_branch: main
managed_services: sonar
install_script: tools/install.sh

[power ender_power]
type: tasmota
off_when_shutdown: True
address: 192.168.2.123
bound_service: klipper
restart_klipper_when_powered: True

[power ender_pi]
type: mqtt
command_topic: cmnd/3DEnclosure/POWER1
command_payload:
  {command}
query_topic: cmnd/3DEnclosure/POWER
state_topic: stat/3DEnclosure/POWER
state_response_template:
  {payload}
query_after_command: False
initial_state: on
off_when_shutdown: False
#off_when_shutdown_delay: 0
on_when_job_queued: True
locked_while_printing: True
bound_service: klipper
restart_klipper_when_powered: False
#restart_delay: 1

[power ender_lights]
type: mqtt
command_topic: cmnd/3DEnclosure/POWER2
command_payload:
  {command}
query_topic: cmnd/3DEnclosure/POWER
state_topic: stat/3DEnclosure/POWER
state_response_template:
  {payload}
query_after_command: False
initial_state: off
off_when_shutdown: False
#off_when_shutdown_delay: 0
on_when_job_queued: True
locked_while_printing: False
bound_service: klipper
restart_klipper_when_powered: False
#restart_delay: 1

[power ender_usb]
type: mqtt
command_topic: cmnd/3DEnclosure/POWER3
command_payload:
  {command}
query_topic: cmnd/3DEnclosure/POWER
state_topic: stat/3DEnclosure/POWER
state_response_template:
  {payload}
query_after_command: False
#initial_state: on
off_when_shutdown: False
#off_when_shutdown_delay: 0
on_when_job_queued: True
locked_while_printing: True
bound_service: klipper
restart_klipper_when_powered: False
#restart_delay: 1

[power ender_heater]
type: mqtt
command_topic: cmnd/3DEnclosure/POWER4
command_payload:
  {command}
query_topic: cmnd/3DEnclosure/POWER
state_topic: stat/3DEnclosure/POWER
state_response_template:
  {payload}
query_after_command: False
#initial_state: off
off_when_shutdown: False
#off_when_shutdown_delay: 0
on_when_job_queued: False
locked_while_printing: True
bound_service: klipper
restart_klipper_when_powered: False
#restart_delay: 1

[power drybox1]
type: tasmota
off_when_shutdown: False
address: 192.168.2.124
restart_klipper_when_powered: False

[power drybox2]
type: tasmota
off_when_shutdown: False
address: 192.168.2.125
restart_klipper_when_powered: False

[mqtt]
address: 192.168.2.96
port: 1883
#   user name and password_file are only needed if anonymous connexion is
#   not allowed on you mqtt brocker configuration
#username: <mqtt_user>
#password_file: ~/.mqttpass
#   An optional path to a text file containing a password used to log in
#   to the broker.  It is strongly recommended that this file be located
#   in a folder not served by Moonraker.  It is also recommended that the
#   password be unique and not used for other logins, as it is stored in
#   plain text.  To create a password file, one may ssh in to the device
#   and enter the following commands:
#      cd ~
#      echo mypassword > .mqttpass
#   Then set this option to:
#     ~/.mqttpass
#   If this option is omitted no password will be used to login.

mqtt_protocol: v3.1.1

#   the following option is not needed for home assistant sensors
#   you can let it to false 
enable_moonraker_api: True

#   the instance name is the root of the topic
#   replace <instance_name> by the name you want
#   the data are sent in the payload of the following topic:
#   <instance_name>/klipper/status
instance_name: voron


[update_manager mobileraker]
type: git_repo
path: /home/pi/mobileraker_companion
origin: https://github.com/Clon1998/mobileraker_companion.git
primary_branch:main
managed_services: mobileraker
env: /home/pi/mobileraker-env/bin/python
requirements: scripts/mobileraker-requirements.txt
install_script: scripts/install-mobileraker-companion.sh
